@model Domain.LoginDetails

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_LayoutQuatoPage.cshtml";
}

<style>
    .cvoputr {
        background: #fff;
        box-shadow: 0 0 3px #ccc;
    }

    .ghjuio{
        position:relative;
    }

    .password-showhide {
        position: absolute;
    }

    .ghjuio{
        margin-bottom:5px;
    }

    .btn-success {
        color: #fff;
        background-color: #1958a7;
        border-color: transparent;
        width: 100%;
        margin-top: 1rem;
    }
    demoInputBox {
        padding: 7px;
        border: #F0F0F0 1px solid;
        border-radius: 4px;
    }

    #password-strength-status {
        padding: 5px 10px;
        color: #FFFFFF;
        border-radius: 4px;
        margin-top: 5px;
    }
    #password-Match-status {
        padding: 5px 10px;
        color: black;
        border-radius: 4px;
        margin-top: 5px;
        
    }
    .Matching-password {
        background-color: #E4DB11;
        border: #BBB418 1px solid;
    } .medium-password {
        background-color: #E4DB11;
        border: #BBB418 1px solid;
    }

    .weak-password {
        background-color: #FF6600;
        border: #AA4502 1px solid;
    }

    .strong-password {
        background-color: #12CC1A;
        border: #0FA015 1px solid;
    }
</style>


<div class="hrow" style="margin-top:5%;">

    <div class="col-sm-12">
        <div class="col-sm-3"></div>
        <form action="/RegistrationLogin/ChangePassword" method="post">
            @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()
            <div class="col-sm-6 cvoputr">
                <div class="col-sm-12" style="font-size: 35px; font-family: 'Arial Rounded MT'; text-align: center; color: #000000; margin-top: 3%; margin-bottom: 3%;">
             Change Password</div>

                <div class="col-sm-3"></div>
                <div class="col-sm-6">
                    <div class="ghjuio">
                        <p id="successMessage" style="color: #bf4747; font-weight: bold">@ViewBag.Accepted</p>
                        <div class="padfgtyu">Old Password</div>
                        @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @autocompleted = "off", @type = "Password", required = "true" })

                    </div>
                    <div class="ghjuio">
                        <div class="padfgtyu">New Password</div>
                        @Html.TextBoxFor(model => model.NewPassword, new { @class = "form-control", @autocompleted = "off", @onKeyUp = "checkPasswordStrength();", required = "true" })
                        <div id="password-strength-status"></div>
                    </div>
                    <div class="ghjuio">
                        <div class="padfgtyu">Confirm Password</div>
                        @Html.TextBoxFor(model => model.RepeatNewPass, new { @class = "form-control", @autocompleted = "off", @onKeyUp = "PasswordMatch();", @type = "Password", required = "true" })
                        <div id="password-Match-status"></div>
                    </div>

                    <div class="ghjuio">
                        <input type="submit" class="btn btn-success" id="subbtn" value="Submit" />
                    </div>
                    </div>
                <div class="col-sm-3"></div>
                <div class="col-sm-12" style="text-align:center;margin-bottom:3%;font-size:17px;"><br /></div>
            </div>
        </form>
        <div class="col-sm-4"></div>
    </div>
</div>
<script>
    $(document).ready(function () {

        $(".show-password, .hide-password").on('click', function () {
            var passwordId = $(this).parents('li:first').find('input').attr('id');
            if ($(this).hasClass('show-password')) {
                $("#Password").attr("type", "text");
                $(this).parent().find(".show-password").hide();
                $(this).parent().find(".hide-password").show();
            } else {
                $("#Password").attr("type", "password");
                $(this).parent().find(".hide-password").hide();
                $(this).parent().find(".show-password").show();
            }
        });
    });

</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#subbtn').attr('disabled', true);
        if ($('#password_strength').val() == "Strong") {
            $('#subbtn').attr('disabled', false);
        }
    });

</script>
@*<script>
    $("#subbtn").click(function () {
        alert("ok");
        if ($('#password_strength').val() != 'Strong') {
            //swal("Plz Select!", "Destination!", "error");
            swal("Go Back", "Plz Select Destination!", "error");

            return false;
        }
    });
        </script>*@

<script type="text/javascript">
    function checkPasswordStrength() {
        var number = /([0-9])/;
        var alphabets = /([a-zA-Z])/;
        var special_characters = /([~,!,@@,$,%,^,&,*,-,_,+,=,?,>,<])/;
        if ($('#NewPassword').val().length < 6) {
            $('#password-strength-status').removeClass();
            $('#password-strength-status').addClass('weak-password');
            $('#password-strength-status').html("Weak (should be atleast 6 characters.)");
            $('#subbtn').attr('disabled', true);
        } else {
            if ($('#NewPassword').val().match(number) && $('#NewPassword').val().match(alphabets) && $('#NewPassword').val().match(special_characters)) {
                $('#password-strength-status').removeClass();
                $('#password-strength-status').addClass('strong-password');
                $('#password-strength-status').html("Strong");
                $('#subbtn').attr('disabled', false);
            } else {
                $('#password-strength-status').removeClass();
                $('#password-strength-status').addClass('medium-password');
                $('#password-strength-status').html("Medium (should include alphabets, numbers and special characters.)");
                $('#subbtn').attr('disabled', true);
            }
        }
    }
    //$("#RepeatNewPass").onkeyup(function () {
        
    //})
    function PasswordMatch() {
        var newpass = $("#NewPassword").val();
        var newchnagepass = $("#RepeatNewPass").val();
        if (newchnagepass != newpass) {
            $('#password-Match-status').removeClass();
            $('#password-Match-status').addClass('Matching-password');
            $('#password-Match-status').html("Password is not matching new password.");
            $('#subbtn').attr('disabled', true);
        }
        else {
            $('#password-Match-status').removeClass();
            $('#password-Match-status').html("");
            $('#subbtn').attr('disabled', false);

        }
    }
</script>

