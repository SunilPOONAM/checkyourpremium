//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CheckyourpremiumliveEntities : DbContext
    {
        public CheckyourpremiumliveEntities()
            : base("name=CheckyourpremiumliveEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<All_Company_Details> All_Company_Details { get; set; }
        public virtual DbSet<AssigneeRelation> AssigneeRelations { get; set; }
        public virtual DbSet<Bajaj_Occupation> Bajaj_Occupation { get; set; }
        public virtual DbSet<Bajaj_Relation> Bajaj_Relation { get; set; }
        public virtual DbSet<bhartiAxaCredential> bhartiAxaCredentials { get; set; }
        public virtual DbSet<Car_Insurence_Record_Saved> Car_Insurence_Record_Saved { get; set; }
        public virtual DbSet<Category_tbl> Category_tbl { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Company1> Companies1 { get; set; }
        public virtual DbSet<Comparision_Health_tbl> Comparision_Health_tbl { get; set; }
        public virtual DbSet<Desease> Deseases { get; set; }
        public virtual DbSet<Encrypt_Password> Encrypt_Password { get; set; }
        public virtual DbSet<Godigit_Responce_Data> Godigit_Responce_Data { get; set; }
        public virtual DbSet<Health_Insurance_Record_Saved> Health_Insurance_Record_Saved { get; set; }
        public virtual DbSet<healthRelation> healthRelations { get; set; }
        public virtual DbSet<ICICI__NATIONALITY__tbl> ICICI__NATIONALITY__tbl { get; set; }
        public virtual DbSet<ICICI_Country_tbl> ICICI_Country_tbl { get; set; }
        public virtual DbSet<ICICI_Education_tbl> ICICI_Education_tbl { get; set; }
        public virtual DbSet<ICICI_MARITAL_STATUS_tbl> ICICI_MARITAL_STATUS_tbl { get; set; }
        public virtual DbSet<ICICI_Occupation_tbl> ICICI_Occupation_tbl { get; set; }
        public virtual DbSet<ICICI_Organisation_tbl> ICICI_Organisation_tbl { get; set; }
        public virtual DbSet<ICICI_State_tbl> ICICI_State_tbl { get; set; }
        public virtual DbSet<ICICI_Trustee_Type_tbl> ICICI_Trustee_Type_tbl { get; set; }
        public virtual DbSet<InsuredRelation> InsuredRelations { get; set; }
        public virtual DbSet<Kotak_Plan_tbl> Kotak_Plan_tbl { get; set; }
        public virtual DbSet<Login_Tbl> Login_Tbl { get; set; }
        public virtual DbSet<LoginReg_tbl> LoginReg_tbl { get; set; }
        public virtual DbSet<Master> Masters { get; set; }
        public virtual DbSet<Moter_RTO> Moter_RTO { get; set; }
        public virtual DbSet<Motor_FuelType> Motor_FuelType { get; set; }
        public virtual DbSet<Motor_Insurance_Record> Motor_Insurance_Record { get; set; }
        public virtual DbSet<Motor_Nominee_Relation> Motor_Nominee_Relation { get; set; }
        public virtual DbSet<Motor_State> Motor_State { get; set; }
        public virtual DbSet<ParentCategory> ParentCategories { get; set; }
        public virtual DbSet<Plan_Benifit> Plan_Benifit { get; set; }
        public virtual DbSet<PolicyPlan> PolicyPlans { get; set; }
        public virtual DbSet<ProposerDetail> ProposerDetails { get; set; }
        public virtual DbSet<Reg_tbl> Reg_tbl { get; set; }
        public virtual DbSet<RiskCover_options> RiskCover_options { get; set; }
        public virtual DbSet<sales_store> sales_store { get; set; }
        public virtual DbSet<Sub_category> Sub_category { get; set; }
        public virtual DbSet<tb_GodigitGender> tb_GodigitGender { get; set; }
        public virtual DbSet<tbl_BajajBlockCity> tbl_BajajBlockCity { get; set; }
        public virtual DbSet<tbl_BajajResponce_Data> tbl_BajajResponce_Data { get; set; }
        public virtual DbSet<tbl_BajajZone> tbl_BajajZone { get; set; }
        public virtual DbSet<tbl_BhartiAxa_PlanName> tbl_BhartiAxa_PlanName { get; set; }
        public virtual DbSet<tbl_BhartiAxaBanned_Country> tbl_BhartiAxaBanned_Country { get; set; }
        public virtual DbSet<tbl_BhartiAxaPaymentStaus> tbl_BhartiAxaPaymentStaus { get; set; }
        public virtual DbSet<tbl_BlockCity> tbl_BlockCity { get; set; }
        public virtual DbSet<tbl_BodyType_Master> tbl_BodyType_Master { get; set; }
        public virtual DbSet<tbl_BuyInfoData> tbl_BuyInfoData { get; set; }
        public virtual DbSet<tbl_BuyPlanInfo> tbl_BuyPlanInfo { get; set; }
        public virtual DbSet<tbl_Country> tbl_Country { get; set; }
        public virtual DbSet<tbl_CoverFrequency> tbl_CoverFrequency { get; set; }
        public virtual DbSet<tbl_EdelWise_Suminsured> tbl_EdelWise_Suminsured { get; set; }
        public virtual DbSet<tbl_FrequncyType> tbl_FrequncyType { get; set; }
        public virtual DbSet<tbl_Fule_Master> tbl_Fule_Master { get; set; }
        public virtual DbSet<tbl_GetPremiumData> tbl_GetPremiumData { get; set; }
        public virtual DbSet<tbl_GetPremiumRequestData> tbl_GetPremiumRequestData { get; set; }
        public virtual DbSet<tbl_GetPremiumResponce> tbl_GetPremiumResponce { get; set; }
        public virtual DbSet<tbl_Godigit_Document> tbl_Godigit_Document { get; set; }
        public virtual DbSet<Tbl_Godigit_Profession> Tbl_Godigit_Profession { get; set; }
        public virtual DbSet<tbl_Godigit_Relation> tbl_Godigit_Relation { get; set; }
        public virtual DbSet<tbl_GodigitCounty> tbl_GodigitCounty { get; set; }
        public virtual DbSet<tbl_GodigitPakege> tbl_GodigitPakege { get; set; }
        public virtual DbSet<tbl_GodigitPurpose> tbl_GodigitPurpose { get; set; }
        public virtual DbSet<tbl_GodigitState> tbl_GodigitState { get; set; }
        public virtual DbSet<tbl_GSTType> tbl_GSTType { get; set; }
        public virtual DbSet<tbl_HC_Relation> tbl_HC_Relation { get; set; }
        public virtual DbSet<tbl_HealthPremiumChartData> tbl_HealthPremiumChartData { get; set; }
        public virtual DbSet<tbl_HEIV_Qualification> tbl_HEIV_Qualification { get; set; }
        public virtual DbSet<tbl_HEIV_Relation> tbl_HEIV_Relation { get; set; }
        public virtual DbSet<tbl_IndiaFirst__CoverageOptions> tbl_IndiaFirst__CoverageOptions { get; set; }
        public virtual DbSet<tbl_IndiaFirstCityData> tbl_IndiaFirstCityData { get; set; }
        public virtual DbSet<tbl_INSURA_Company> tbl_INSURA_Company { get; set; }
        public virtual DbSet<tbl_IPA_Occupation> tbl_IPA_Occupation { get; set; }
        public virtual DbSet<tbl_MakeType_Master> tbl_MakeType_Master { get; set; }
        public virtual DbSet<tbl_MasterSumInsured> tbl_MasterSumInsured { get; set; }
        public virtual DbSet<tbl_MaterialStatus> tbl_MaterialStatus { get; set; }
        public virtual DbSet<tbl_ModelType_Master> tbl_ModelType_Master { get; set; }
        public virtual DbSet<tbl_OccupationMaster> tbl_OccupationMaster { get; set; }
        public virtual DbSet<tbl_PinCode> tbl_PinCode { get; set; }
        public virtual DbSet<tbl_PremiumType> tbl_PremiumType { get; set; }
        public virtual DbSet<tbl_ProductPlan_Data> tbl_ProductPlan_Data { get; set; }
        public virtual DbSet<tbl_Scheme> tbl_Scheme { get; set; }
        public virtual DbSet<tbl_StarCountyList> tbl_StarCountyList { get; set; }
        public virtual DbSet<tbl_State> tbl_State { get; set; }
        public virtual DbSet<tbl_travelCountry> tbl_travelCountry { get; set; }
        public virtual DbSet<tblBannedCountry> tblBannedCountries { get; set; }
        public virtual DbSet<tblCity> tblCities { get; set; }
        public virtual DbSet<tblCountry> tblCountries { get; set; }
        public virtual DbSet<tblRelationMaster> tblRelationMasters { get; set; }
        public virtual DbSet<tblState> tblStates { get; set; }
        public virtual DbSet<Term_Life_Insurance> Term_Life_Insurance { get; set; }
        public virtual DbSet<Tow_Weeler_Record_Insert> Tow_Weeler_Record_Insert { get; set; }
        public virtual DbSet<Travel_Insurance> Travel_Insurance { get; set; }
        public virtual DbSet<TravelDestination> TravelDestinations { get; set; }
        public virtual DbSet<TravelInsuranceSearchBy> TravelInsuranceSearchBies { get; set; }
        public virtual DbSet<TravellerDetail> TravellerDetails { get; set; }
        public virtual DbSet<TravelPlan> TravelPlans { get; set; }
        public virtual DbSet<TravelProposalDetail> TravelProposalDetails { get; set; }
        public virtual DbSet<TravelPurposeMaster> TravelPurposeMasters { get; set; }
        public virtual DbSet<Two_Wheeler_Master> Two_Wheeler_Master { get; set; }
        public virtual DbSet<VisaType> VisaTypes { get; set; }
        public virtual DbSet<Car_Insurance> Car_Insurance { get; set; }
        public virtual DbSet<Contact_Us> Contact_Us { get; set; }
        public virtual DbSet<RTO_MASTERS> RTO_MASTERS { get; set; }
        public virtual DbSet<View_HealthChartData> View_HealthChartData { get; set; }
        public virtual DbSet<View_TermLifeInsurance> View_TermLifeInsurance { get; set; }
        public virtual DbSet<View_TravelInsurance> View_TravelInsurance { get; set; }
        public virtual DbSet<Compare_TermLife> Compare_TermLife { get; set; }
    
        public virtual ObjectResult<string> Car_Insurance_Store(Nullable<long> id, Nullable<long> make_Id, string make, Nullable<long> model_Id, string model, Nullable<int> variant_Id, string variant, Nullable<int> cC, Nullable<int> seating_Capacity, Nullable<long> fuel_Id, string fuel_Type, Nullable<long> segment_ID, string vehicle_Segment, Nullable<long> location_ID, string lOCATION, Nullable<decimal> price, Nullable<long> main_Vehicle_Type_ID, string no_Of_Wheels, Nullable<long> planID, string action)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(long));
    
            var makeParameter = make != null ?
                new ObjectParameter("Make", make) :
                new ObjectParameter("Make", typeof(string));
    
            var model_IdParameter = model_Id.HasValue ?
                new ObjectParameter("Model_Id", model_Id) :
                new ObjectParameter("Model_Id", typeof(long));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var variant_IdParameter = variant_Id.HasValue ?
                new ObjectParameter("Variant_Id", variant_Id) :
                new ObjectParameter("Variant_Id", typeof(int));
    
            var variantParameter = variant != null ?
                new ObjectParameter("Variant", variant) :
                new ObjectParameter("Variant", typeof(string));
    
            var cCParameter = cC.HasValue ?
                new ObjectParameter("CC", cC) :
                new ObjectParameter("CC", typeof(int));
    
            var seating_CapacityParameter = seating_Capacity.HasValue ?
                new ObjectParameter("Seating_Capacity", seating_Capacity) :
                new ObjectParameter("Seating_Capacity", typeof(int));
    
            var fuel_IdParameter = fuel_Id.HasValue ?
                new ObjectParameter("Fuel_Id", fuel_Id) :
                new ObjectParameter("Fuel_Id", typeof(long));
    
            var fuel_TypeParameter = fuel_Type != null ?
                new ObjectParameter("Fuel_Type", fuel_Type) :
                new ObjectParameter("Fuel_Type", typeof(string));
    
            var segment_IDParameter = segment_ID.HasValue ?
                new ObjectParameter("Segment_ID", segment_ID) :
                new ObjectParameter("Segment_ID", typeof(long));
    
            var vehicle_SegmentParameter = vehicle_Segment != null ?
                new ObjectParameter("Vehicle_Segment", vehicle_Segment) :
                new ObjectParameter("Vehicle_Segment", typeof(string));
    
            var location_IDParameter = location_ID.HasValue ?
                new ObjectParameter("Location_ID", location_ID) :
                new ObjectParameter("Location_ID", typeof(long));
    
            var lOCATIONParameter = lOCATION != null ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var main_Vehicle_Type_IDParameter = main_Vehicle_Type_ID.HasValue ?
                new ObjectParameter("Main_Vehicle_Type_ID", main_Vehicle_Type_ID) :
                new ObjectParameter("Main_Vehicle_Type_ID", typeof(long));
    
            var no_Of_WheelsParameter = no_Of_Wheels != null ?
                new ObjectParameter("No_Of_Wheels", no_Of_Wheels) :
                new ObjectParameter("No_Of_Wheels", typeof(string));
    
            var planIDParameter = planID.HasValue ?
                new ObjectParameter("PlanID", planID) :
                new ObjectParameter("PlanID", typeof(long));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Car_Insurance_Store", idParameter, make_IdParameter, makeParameter, model_IdParameter, modelParameter, variant_IdParameter, variantParameter, cCParameter, seating_CapacityParameter, fuel_IdParameter, fuel_TypeParameter, segment_IDParameter, vehicle_SegmentParameter, location_IDParameter, lOCATIONParameter, priceParameter, main_Vehicle_Type_IDParameter, no_Of_WheelsParameter, planIDParameter, actionParameter);
        }
    
        public virtual ObjectResult<CarInsertRcord_Result> CarInsertRcord(Nullable<int> iD, string city_RTO, string model, string fuel_Type, string year, string full_Name, string email_ID, string mobile_No, string action)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var city_RTOParameter = city_RTO != null ?
                new ObjectParameter("City_RTO", city_RTO) :
                new ObjectParameter("City_RTO", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var fuel_TypeParameter = fuel_Type != null ?
                new ObjectParameter("Fuel_Type", fuel_Type) :
                new ObjectParameter("Fuel_Type", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var full_NameParameter = full_Name != null ?
                new ObjectParameter("Full_Name", full_Name) :
                new ObjectParameter("Full_Name", typeof(string));
    
            var email_IDParameter = email_ID != null ?
                new ObjectParameter("Email_ID", email_ID) :
                new ObjectParameter("Email_ID", typeof(string));
    
            var mobile_NoParameter = mobile_No != null ?
                new ObjectParameter("Mobile_No", mobile_No) :
                new ObjectParameter("Mobile_No", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CarInsertRcord_Result>("CarInsertRcord", iDParameter, city_RTOParameter, modelParameter, fuel_TypeParameter, yearParameter, full_NameParameter, email_IDParameter, mobile_NoParameter, actionParameter);
        }
    
        public virtual ObjectResult<CityStore_Result> CityStore(Nullable<long> city_ID, string city_Name, Nullable<long> state_ID, string action)
        {
            var city_IDParameter = city_ID.HasValue ?
                new ObjectParameter("City_ID", city_ID) :
                new ObjectParameter("City_ID", typeof(long));
    
            var city_NameParameter = city_Name != null ?
                new ObjectParameter("City_Name", city_Name) :
                new ObjectParameter("City_Name", typeof(string));
    
            var state_IDParameter = state_ID.HasValue ?
                new ObjectParameter("State_ID", state_ID) :
                new ObjectParameter("State_ID", typeof(long));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CityStore_Result>("CityStore", city_IDParameter, city_NameParameter, state_IDParameter, actionParameter);
        }
    
        public virtual ObjectResult<ContactUs_Result> ContactUs(Nullable<int> iD, string name, string email, string subject, string message, string date, string action)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ContactUs_Result>("ContactUs", iDParameter, nameParameter, emailParameter, subjectParameter, messageParameter, dateParameter, actionParameter);
        }
    
        public virtual ObjectResult<encrypt_Result> encrypt(Nullable<int> iD, string usert_ID, string user_Password, string user_Password_Decrypt, string action)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var usert_IDParameter = usert_ID != null ?
                new ObjectParameter("Usert_ID", usert_ID) :
                new ObjectParameter("Usert_ID", typeof(string));
    
            var user_PasswordParameter = user_Password != null ?
                new ObjectParameter("User_Password", user_Password) :
                new ObjectParameter("User_Password", typeof(string));
    
            var user_Password_DecryptParameter = user_Password_Decrypt != null ?
                new ObjectParameter("User_Password_Decrypt", user_Password_Decrypt) :
                new ObjectParameter("User_Password_Decrypt", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<encrypt_Result>("encrypt", iDParameter, usert_IDParameter, user_PasswordParameter, user_Password_DecryptParameter, actionParameter);
        }
    
        public virtual int Health_Insurence_Store(Nullable<int> iD, string gender, string name, string mobileNo, string city, string income, string self, string child, string grand_father, string father_In_low, string adult, string self_Age, string date, string serviceTax, string action)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var incomeParameter = income != null ?
                new ObjectParameter("Income", income) :
                new ObjectParameter("Income", typeof(string));
    
            var selfParameter = self != null ?
                new ObjectParameter("Self", self) :
                new ObjectParameter("Self", typeof(string));
    
            var childParameter = child != null ?
                new ObjectParameter("Child", child) :
                new ObjectParameter("Child", typeof(string));
    
            var grand_fatherParameter = grand_father != null ?
                new ObjectParameter("Grand_father", grand_father) :
                new ObjectParameter("Grand_father", typeof(string));
    
            var father_In_lowParameter = father_In_low != null ?
                new ObjectParameter("Father_In_low", father_In_low) :
                new ObjectParameter("Father_In_low", typeof(string));
    
            var adultParameter = adult != null ?
                new ObjectParameter("Adult", adult) :
                new ObjectParameter("Adult", typeof(string));
    
            var self_AgeParameter = self_Age != null ?
                new ObjectParameter("Self_Age", self_Age) :
                new ObjectParameter("Self_Age", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var serviceTaxParameter = serviceTax != null ?
                new ObjectParameter("ServiceTax", serviceTax) :
                new ObjectParameter("ServiceTax", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Health_Insurence_Store", iDParameter, genderParameter, nameParameter, mobileNoParameter, cityParameter, incomeParameter, selfParameter, childParameter, grand_fatherParameter, father_In_lowParameter, adultParameter, self_AgeParameter, dateParameter, serviceTaxParameter, actionParameter);
        }
    
        public virtual ObjectResult<RTOMASTER_Store_Result> RTOMASTER_Store(Nullable<int> rTO_ID, string rTO_CODE, string rTO_CITY, string rTO_STATE, string zone, string action)
        {
            var rTO_IDParameter = rTO_ID.HasValue ?
                new ObjectParameter("RTO_ID", rTO_ID) :
                new ObjectParameter("RTO_ID", typeof(int));
    
            var rTO_CODEParameter = rTO_CODE != null ?
                new ObjectParameter("RTO_CODE", rTO_CODE) :
                new ObjectParameter("RTO_CODE", typeof(string));
    
            var rTO_CITYParameter = rTO_CITY != null ?
                new ObjectParameter("RTO_CITY", rTO_CITY) :
                new ObjectParameter("RTO_CITY", typeof(string));
    
            var rTO_STATEParameter = rTO_STATE != null ?
                new ObjectParameter("RTO_STATE", rTO_STATE) :
                new ObjectParameter("RTO_STATE", typeof(string));
    
            var zoneParameter = zone != null ?
                new ObjectParameter("Zone", zone) :
                new ObjectParameter("Zone", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RTOMASTER_Store_Result>("RTOMASTER_Store", rTO_IDParameter, rTO_CODEParameter, rTO_CITYParameter, rTO_STATEParameter, zoneParameter, actionParameter);
        }
    
        public virtual ObjectResult<sp_HealthInsuranceList_Result> sp_HealthInsuranceList(Nullable<int> ageSelf, Nullable<int> adult, Nullable<int> children, Nullable<int> term, Nullable<int> suminsured)
        {
            var ageSelfParameter = ageSelf.HasValue ?
                new ObjectParameter("ageSelf", ageSelf) :
                new ObjectParameter("ageSelf", typeof(int));
    
            var adultParameter = adult.HasValue ?
                new ObjectParameter("adult", adult) :
                new ObjectParameter("adult", typeof(int));
    
            var childrenParameter = children.HasValue ?
                new ObjectParameter("children", children) :
                new ObjectParameter("children", typeof(int));
    
            var termParameter = term.HasValue ?
                new ObjectParameter("term", term) :
                new ObjectParameter("term", typeof(int));
    
            var suminsuredParameter = suminsured.HasValue ?
                new ObjectParameter("suminsured", suminsured) :
                new ObjectParameter("suminsured", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HealthInsuranceList_Result>("sp_HealthInsuranceList", ageSelfParameter, adultParameter, childrenParameter, termParameter, suminsuredParameter);
        }
    
        public virtual int tbl_GetPremiumRequestData_Store(string aDB, string aTPD, string cI, string hCB, string lAAge, string lADOB, string lAEmail, string lAFullName, string lAGender, string lANumber, string lAProposerSame, string lATobacco, string pEBased, string term, string wOP, string additionalBenefit, string age, string betterHalfBenefit, string bond, string childAge, string childGender, string claimsOption, string cliDOB, string cliGender, string distributionChannel, string flexibleBenefitYear, string frequency, string fullName, string index, string investmentStrategy, string largeCap, string managed, string maturityAge, string maturityOption, string moneyMarket, string payoutMonths, string payoutOption, string payoutPercentageIncreasingIncome, string payoutPercentageLevelIncome, string payoutPercentageLumpsum, string pdf, string policyOption, string policyTerm, string postponement, string premiumPayingTerm, string product, string risingStar, string smoke, string spouseAge, string spouseDOB, string spouseFirstName, string spouseGender, string spouseLastName, string spouseTobaccoUser, string staff, string sumAssured, string top250, string topUpBenefitPercentage, string tranId, string workSiteFlag, string action)
        {
            var aDBParameter = aDB != null ?
                new ObjectParameter("ADB", aDB) :
                new ObjectParameter("ADB", typeof(string));
    
            var aTPDParameter = aTPD != null ?
                new ObjectParameter("ATPD", aTPD) :
                new ObjectParameter("ATPD", typeof(string));
    
            var cIParameter = cI != null ?
                new ObjectParameter("CI", cI) :
                new ObjectParameter("CI", typeof(string));
    
            var hCBParameter = hCB != null ?
                new ObjectParameter("HCB", hCB) :
                new ObjectParameter("HCB", typeof(string));
    
            var lAAgeParameter = lAAge != null ?
                new ObjectParameter("LAAge", lAAge) :
                new ObjectParameter("LAAge", typeof(string));
    
            var lADOBParameter = lADOB != null ?
                new ObjectParameter("LADOB", lADOB) :
                new ObjectParameter("LADOB", typeof(string));
    
            var lAEmailParameter = lAEmail != null ?
                new ObjectParameter("LAEmail", lAEmail) :
                new ObjectParameter("LAEmail", typeof(string));
    
            var lAFullNameParameter = lAFullName != null ?
                new ObjectParameter("LAFullName", lAFullName) :
                new ObjectParameter("LAFullName", typeof(string));
    
            var lAGenderParameter = lAGender != null ?
                new ObjectParameter("LAGender", lAGender) :
                new ObjectParameter("LAGender", typeof(string));
    
            var lANumberParameter = lANumber != null ?
                new ObjectParameter("LANumber", lANumber) :
                new ObjectParameter("LANumber", typeof(string));
    
            var lAProposerSameParameter = lAProposerSame != null ?
                new ObjectParameter("LAProposerSame", lAProposerSame) :
                new ObjectParameter("LAProposerSame", typeof(string));
    
            var lATobaccoParameter = lATobacco != null ?
                new ObjectParameter("LATobacco", lATobacco) :
                new ObjectParameter("LATobacco", typeof(string));
    
            var pEBasedParameter = pEBased != null ?
                new ObjectParameter("PEBased", pEBased) :
                new ObjectParameter("PEBased", typeof(string));
    
            var termParameter = term != null ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(string));
    
            var wOPParameter = wOP != null ?
                new ObjectParameter("WOP", wOP) :
                new ObjectParameter("WOP", typeof(string));
    
            var additionalBenefitParameter = additionalBenefit != null ?
                new ObjectParameter("additionalBenefit", additionalBenefit) :
                new ObjectParameter("additionalBenefit", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(string));
    
            var betterHalfBenefitParameter = betterHalfBenefit != null ?
                new ObjectParameter("betterHalfBenefit", betterHalfBenefit) :
                new ObjectParameter("betterHalfBenefit", typeof(string));
    
            var bondParameter = bond != null ?
                new ObjectParameter("bond", bond) :
                new ObjectParameter("bond", typeof(string));
    
            var childAgeParameter = childAge != null ?
                new ObjectParameter("childAge", childAge) :
                new ObjectParameter("childAge", typeof(string));
    
            var childGenderParameter = childGender != null ?
                new ObjectParameter("childGender", childGender) :
                new ObjectParameter("childGender", typeof(string));
    
            var claimsOptionParameter = claimsOption != null ?
                new ObjectParameter("claimsOption", claimsOption) :
                new ObjectParameter("claimsOption", typeof(string));
    
            var cliDOBParameter = cliDOB != null ?
                new ObjectParameter("cliDOB", cliDOB) :
                new ObjectParameter("cliDOB", typeof(string));
    
            var cliGenderParameter = cliGender != null ?
                new ObjectParameter("cliGender", cliGender) :
                new ObjectParameter("cliGender", typeof(string));
    
            var distributionChannelParameter = distributionChannel != null ?
                new ObjectParameter("distributionChannel", distributionChannel) :
                new ObjectParameter("distributionChannel", typeof(string));
    
            var flexibleBenefitYearParameter = flexibleBenefitYear != null ?
                new ObjectParameter("flexibleBenefitYear", flexibleBenefitYear) :
                new ObjectParameter("flexibleBenefitYear", typeof(string));
    
            var frequencyParameter = frequency != null ?
                new ObjectParameter("frequency", frequency) :
                new ObjectParameter("frequency", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var indexParameter = index != null ?
                new ObjectParameter("index", index) :
                new ObjectParameter("index", typeof(string));
    
            var investmentStrategyParameter = investmentStrategy != null ?
                new ObjectParameter("investmentStrategy", investmentStrategy) :
                new ObjectParameter("investmentStrategy", typeof(string));
    
            var largeCapParameter = largeCap != null ?
                new ObjectParameter("largeCap", largeCap) :
                new ObjectParameter("largeCap", typeof(string));
    
            var managedParameter = managed != null ?
                new ObjectParameter("managed", managed) :
                new ObjectParameter("managed", typeof(string));
    
            var maturityAgeParameter = maturityAge != null ?
                new ObjectParameter("maturityAge", maturityAge) :
                new ObjectParameter("maturityAge", typeof(string));
    
            var maturityOptionParameter = maturityOption != null ?
                new ObjectParameter("maturityOption", maturityOption) :
                new ObjectParameter("maturityOption", typeof(string));
    
            var moneyMarketParameter = moneyMarket != null ?
                new ObjectParameter("moneyMarket", moneyMarket) :
                new ObjectParameter("moneyMarket", typeof(string));
    
            var payoutMonthsParameter = payoutMonths != null ?
                new ObjectParameter("payoutMonths", payoutMonths) :
                new ObjectParameter("payoutMonths", typeof(string));
    
            var payoutOptionParameter = payoutOption != null ?
                new ObjectParameter("payoutOption", payoutOption) :
                new ObjectParameter("payoutOption", typeof(string));
    
            var payoutPercentageIncreasingIncomeParameter = payoutPercentageIncreasingIncome != null ?
                new ObjectParameter("payoutPercentageIncreasingIncome", payoutPercentageIncreasingIncome) :
                new ObjectParameter("payoutPercentageIncreasingIncome", typeof(string));
    
            var payoutPercentageLevelIncomeParameter = payoutPercentageLevelIncome != null ?
                new ObjectParameter("payoutPercentageLevelIncome", payoutPercentageLevelIncome) :
                new ObjectParameter("payoutPercentageLevelIncome", typeof(string));
    
            var payoutPercentageLumpsumParameter = payoutPercentageLumpsum != null ?
                new ObjectParameter("payoutPercentageLumpsum", payoutPercentageLumpsum) :
                new ObjectParameter("payoutPercentageLumpsum", typeof(string));
    
            var pdfParameter = pdf != null ?
                new ObjectParameter("pdf", pdf) :
                new ObjectParameter("pdf", typeof(string));
    
            var policyOptionParameter = policyOption != null ?
                new ObjectParameter("policyOption", policyOption) :
                new ObjectParameter("policyOption", typeof(string));
    
            var policyTermParameter = policyTerm != null ?
                new ObjectParameter("policyTerm", policyTerm) :
                new ObjectParameter("policyTerm", typeof(string));
    
            var postponementParameter = postponement != null ?
                new ObjectParameter("postponement", postponement) :
                new ObjectParameter("postponement", typeof(string));
    
            var premiumPayingTermParameter = premiumPayingTerm != null ?
                new ObjectParameter("premiumPayingTerm", premiumPayingTerm) :
                new ObjectParameter("premiumPayingTerm", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var risingStarParameter = risingStar != null ?
                new ObjectParameter("risingStar", risingStar) :
                new ObjectParameter("risingStar", typeof(string));
    
            var smokeParameter = smoke != null ?
                new ObjectParameter("smoke", smoke) :
                new ObjectParameter("smoke", typeof(string));
    
            var spouseAgeParameter = spouseAge != null ?
                new ObjectParameter("spouseAge", spouseAge) :
                new ObjectParameter("spouseAge", typeof(string));
    
            var spouseDOBParameter = spouseDOB != null ?
                new ObjectParameter("spouseDOB", spouseDOB) :
                new ObjectParameter("spouseDOB", typeof(string));
    
            var spouseFirstNameParameter = spouseFirstName != null ?
                new ObjectParameter("spouseFirstName", spouseFirstName) :
                new ObjectParameter("spouseFirstName", typeof(string));
    
            var spouseGenderParameter = spouseGender != null ?
                new ObjectParameter("spouseGender", spouseGender) :
                new ObjectParameter("spouseGender", typeof(string));
    
            var spouseLastNameParameter = spouseLastName != null ?
                new ObjectParameter("spouseLastName", spouseLastName) :
                new ObjectParameter("spouseLastName", typeof(string));
    
            var spouseTobaccoUserParameter = spouseTobaccoUser != null ?
                new ObjectParameter("spouseTobaccoUser", spouseTobaccoUser) :
                new ObjectParameter("spouseTobaccoUser", typeof(string));
    
            var staffParameter = staff != null ?
                new ObjectParameter("staff", staff) :
                new ObjectParameter("staff", typeof(string));
    
            var sumAssuredParameter = sumAssured != null ?
                new ObjectParameter("sumAssured", sumAssured) :
                new ObjectParameter("sumAssured", typeof(string));
    
            var top250Parameter = top250 != null ?
                new ObjectParameter("top250", top250) :
                new ObjectParameter("top250", typeof(string));
    
            var topUpBenefitPercentageParameter = topUpBenefitPercentage != null ?
                new ObjectParameter("topUpBenefitPercentage", topUpBenefitPercentage) :
                new ObjectParameter("topUpBenefitPercentage", typeof(string));
    
            var tranIdParameter = tranId != null ?
                new ObjectParameter("tranId", tranId) :
                new ObjectParameter("tranId", typeof(string));
    
            var workSiteFlagParameter = workSiteFlag != null ?
                new ObjectParameter("workSiteFlag", workSiteFlag) :
                new ObjectParameter("workSiteFlag", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_GetPremiumRequestData_Store", aDBParameter, aTPDParameter, cIParameter, hCBParameter, lAAgeParameter, lADOBParameter, lAEmailParameter, lAFullNameParameter, lAGenderParameter, lANumberParameter, lAProposerSameParameter, lATobaccoParameter, pEBasedParameter, termParameter, wOPParameter, additionalBenefitParameter, ageParameter, betterHalfBenefitParameter, bondParameter, childAgeParameter, childGenderParameter, claimsOptionParameter, cliDOBParameter, cliGenderParameter, distributionChannelParameter, flexibleBenefitYearParameter, frequencyParameter, fullNameParameter, indexParameter, investmentStrategyParameter, largeCapParameter, managedParameter, maturityAgeParameter, maturityOptionParameter, moneyMarketParameter, payoutMonthsParameter, payoutOptionParameter, payoutPercentageIncreasingIncomeParameter, payoutPercentageLevelIncomeParameter, payoutPercentageLumpsumParameter, pdfParameter, policyOptionParameter, policyTermParameter, postponementParameter, premiumPayingTermParameter, productParameter, risingStarParameter, smokeParameter, spouseAgeParameter, spouseDOBParameter, spouseFirstNameParameter, spouseGenderParameter, spouseLastNameParameter, spouseTobaccoUserParameter, staffParameter, sumAssuredParameter, top250Parameter, topUpBenefitPercentageParameter, tranIdParameter, workSiteFlagParameter, actionParameter);
        }
    
        public virtual int tbl_GetPremiumResponce_Store(string accidentalDeathPremium, string basePremium, string betterHalfPremium, string criticalIllnessPremium, string error, string hcbPremium, string pdfName, string permanentDisabilityPremium, string premium, string premiumWaiver, string sumAssured, string totalPremium, string company, string planName, string custID, string action)
        {
            var accidentalDeathPremiumParameter = accidentalDeathPremium != null ?
                new ObjectParameter("accidentalDeathPremium", accidentalDeathPremium) :
                new ObjectParameter("accidentalDeathPremium", typeof(string));
    
            var basePremiumParameter = basePremium != null ?
                new ObjectParameter("basePremium", basePremium) :
                new ObjectParameter("basePremium", typeof(string));
    
            var betterHalfPremiumParameter = betterHalfPremium != null ?
                new ObjectParameter("betterHalfPremium", betterHalfPremium) :
                new ObjectParameter("betterHalfPremium", typeof(string));
    
            var criticalIllnessPremiumParameter = criticalIllnessPremium != null ?
                new ObjectParameter("criticalIllnessPremium", criticalIllnessPremium) :
                new ObjectParameter("criticalIllnessPremium", typeof(string));
    
            var errorParameter = error != null ?
                new ObjectParameter("error", error) :
                new ObjectParameter("error", typeof(string));
    
            var hcbPremiumParameter = hcbPremium != null ?
                new ObjectParameter("hcbPremium", hcbPremium) :
                new ObjectParameter("hcbPremium", typeof(string));
    
            var pdfNameParameter = pdfName != null ?
                new ObjectParameter("pdfName", pdfName) :
                new ObjectParameter("pdfName", typeof(string));
    
            var permanentDisabilityPremiumParameter = permanentDisabilityPremium != null ?
                new ObjectParameter("permanentDisabilityPremium", permanentDisabilityPremium) :
                new ObjectParameter("permanentDisabilityPremium", typeof(string));
    
            var premiumParameter = premium != null ?
                new ObjectParameter("premium", premium) :
                new ObjectParameter("premium", typeof(string));
    
            var premiumWaiverParameter = premiumWaiver != null ?
                new ObjectParameter("premiumWaiver", premiumWaiver) :
                new ObjectParameter("premiumWaiver", typeof(string));
    
            var sumAssuredParameter = sumAssured != null ?
                new ObjectParameter("sumAssured", sumAssured) :
                new ObjectParameter("sumAssured", typeof(string));
    
            var totalPremiumParameter = totalPremium != null ?
                new ObjectParameter("totalPremium", totalPremium) :
                new ObjectParameter("totalPremium", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            var planNameParameter = planName != null ?
                new ObjectParameter("PlanName", planName) :
                new ObjectParameter("PlanName", typeof(string));
    
            var custIDParameter = custID != null ?
                new ObjectParameter("CustID", custID) :
                new ObjectParameter("CustID", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_GetPremiumResponce_Store", accidentalDeathPremiumParameter, basePremiumParameter, betterHalfPremiumParameter, criticalIllnessPremiumParameter, errorParameter, hcbPremiumParameter, pdfNameParameter, permanentDisabilityPremiumParameter, premiumParameter, premiumWaiverParameter, sumAssuredParameter, totalPremiumParameter, companyParameter, planNameParameter, custIDParameter, actionParameter);
        }
    
        public virtual ObjectResult<Term_Lite_Insurence_Proce_Result> Term_Lite_Insurence_Proce(Nullable<int> iD, string name, string dOB, string mobile_No, string email_ID, string date, string action)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var mobile_NoParameter = mobile_No != null ?
                new ObjectParameter("Mobile_No", mobile_No) :
                new ObjectParameter("Mobile_No", typeof(string));
    
            var email_IDParameter = email_ID != null ?
                new ObjectParameter("Email_ID", email_ID) :
                new ObjectParameter("Email_ID", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Term_Lite_Insurence_Proce_Result>("Term_Lite_Insurence_Proce", iDParameter, nameParameter, dOBParameter, mobile_NoParameter, email_IDParameter, dateParameter, actionParameter);
        }
    
        public virtual ObjectResult<tow_weelersInsertRecord_Result> tow_weelersInsertRecord(Nullable<int> iD, string model, string cITY, string varient, string year, string previousins, string date, string action)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var cITYParameter = cITY != null ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(string));
    
            var varientParameter = varient != null ?
                new ObjectParameter("Varient", varient) :
                new ObjectParameter("Varient", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var previousinsParameter = previousins != null ?
                new ObjectParameter("previousins", previousins) :
                new ObjectParameter("previousins", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tow_weelersInsertRecord_Result>("tow_weelersInsertRecord", iDParameter, modelParameter, cITYParameter, varientParameter, yearParameter, previousinsParameter, dateParameter, actionParameter);
        }
    
        public virtual ObjectResult<string> Tow_WeelersPorced(string mAKE, string mODEL, Nullable<double> cUBIC, Nullable<double> sEATING_CAPACITY, Nullable<double> gVW, Nullable<double> cARRYING, Nullable<double> cAPACITY, string vARIANT, string action)
        {
            var mAKEParameter = mAKE != null ?
                new ObjectParameter("MAKE", mAKE) :
                new ObjectParameter("MAKE", typeof(string));
    
            var mODELParameter = mODEL != null ?
                new ObjectParameter("MODEL", mODEL) :
                new ObjectParameter("MODEL", typeof(string));
    
            var cUBICParameter = cUBIC.HasValue ?
                new ObjectParameter("CUBIC", cUBIC) :
                new ObjectParameter("CUBIC", typeof(double));
    
            var sEATING_CAPACITYParameter = sEATING_CAPACITY.HasValue ?
                new ObjectParameter("SEATING_CAPACITY", sEATING_CAPACITY) :
                new ObjectParameter("SEATING_CAPACITY", typeof(double));
    
            var gVWParameter = gVW.HasValue ?
                new ObjectParameter("GVW", gVW) :
                new ObjectParameter("GVW", typeof(double));
    
            var cARRYINGParameter = cARRYING.HasValue ?
                new ObjectParameter("CARRYING", cARRYING) :
                new ObjectParameter("CARRYING", typeof(double));
    
            var cAPACITYParameter = cAPACITY.HasValue ?
                new ObjectParameter("CAPACITY", cAPACITY) :
                new ObjectParameter("CAPACITY", typeof(double));
    
            var vARIANTParameter = vARIANT != null ?
                new ObjectParameter("VARIANT", vARIANT) :
                new ObjectParameter("VARIANT", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Tow_WeelersPorced", mAKEParameter, mODELParameter, cUBICParameter, sEATING_CAPACITYParameter, gVWParameter, cARRYINGParameter, cAPACITYParameter, vARIANTParameter, actionParameter);
        }
    }
}
